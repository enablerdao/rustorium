input {
  beats {
    port => 5044
  }
  
  tcp {
    port => 5000
    codec => json
  }
  
  udp {
    port => 5000
    codec => json
  }
}

filter {
  if [type] == "rustorium" {
    grok {
      match => { "message" => "%{TIMESTAMP_ISO8601:timestamp} %{LOGLEVEL:log_level} %{GREEDYDATA:message}" }
    }
    
    date {
      match => [ "timestamp", "ISO8601" ]
      target => "@timestamp"
    }
    
    if [log_level] == "ERROR" {
      mutate {
        add_tag => ["error"]
      }
    }
  }
  
  if [type] == "transaction" {
    grok {
      match => { "message" => "%{TIMESTAMP_ISO8601:timestamp} %{WORD:tx_type} %{WORD:tx_hash} %{WORD:status} %{GREEDYDATA:details}" }
    }
    
    date {
      match => [ "timestamp", "ISO8601" ]
      target => "@timestamp"
    }
  }
  
  if [type] == "block" {
    grok {
      match => { "message" => "%{TIMESTAMP_ISO8601:timestamp} BLOCK %{NUMBER:block_number} %{WORD:block_hash} %{NUMBER:tx_count}" }
    }
    
    date {
      match => [ "timestamp", "ISO8601" ]
      target => "@timestamp"
    }
  }
  
  if [type] == "consensus" {
    grok {
      match => { "message" => "%{TIMESTAMP_ISO8601:timestamp} CONSENSUS %{WORD:event} %{GREEDYDATA:details}" }
    }
    
    date {
      match => [ "timestamp", "ISO8601" ]
      target => "@timestamp"
    }
  }
  
  if [container][image][name] {
    mutate {
      add_field => { "docker_image" => "%{[container][image][name]}" }
    }
  }
  
  if [kubernetes][namespace_name] {
    mutate {
      add_field => { "k8s_namespace" => "%{[kubernetes][namespace_name]}" }
      add_field => { "k8s_pod" => "%{[kubernetes][pod][name]}" }
    }
  }
}

output {
  elasticsearch {
    hosts => ["elasticsearch:9200"]
    index => "rustorium-%{+YYYY.MM.dd}"
    
    # エラーログは別のインデックスに保存
    if "error" in [tags] {
      index => "rustorium-errors-%{+YYYY.MM.dd}"
    }
    
    # トランザクションログは別のインデックスに保存
    if [type] == "transaction" {
      index => "rustorium-transactions-%{+YYYY.MM.dd}"
    }
    
    # ブロックログは別のインデックスに保存
    if [type] == "block" {
      index => "rustorium-blocks-%{+YYYY.MM.dd}"
    }
    
    # コンセンサスログは別のインデックスに保存
    if [type] == "consensus" {
      index => "rustorium-consensus-%{+YYYY.MM.dd}"
    }
  }
  
  # エラーログはSlackにも送信
  if "error" in [tags] {
    http {
      url => "${SLACK_WEBHOOK_URL}"
      format => "json"
      content_type => "application/json"
      mapping => {
        "text" => "Error: %{message}"
        "username" => "Rustorium Logger"
        "icon_emoji" => ":warning:"
      }
    }
  }
  
  # デバッグ用にコンソールにも出力
  if [log_level] == "DEBUG" {
    stdout {
      codec => rubydebug
    }
  }
}
