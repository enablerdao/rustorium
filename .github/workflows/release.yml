name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  create-release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

  build-release:
    needs: create-release
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            artifact_name: rustorium-linux-x86_64.tar.gz
          - os: macos-latest
            target: x86_64-apple-darwin
            artifact_name: rustorium-darwin-x86_64.tar.gz
          - os: macos-latest
            target: aarch64-apple-darwin
            artifact_name: rustorium-darwin-aarch64.tar.gz

    steps:
      - uses: actions/checkout@v2

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}
          override: true

      - name: Build binary (with bundled rocksdb)
        run: |
          RUSTFLAGS="-C target-cpu=native" cargo build --profile fast --target ${{ matrix.target }} --features bundled-rocksdb

      - name: Create tarball
        run: |
          tar czf ${{ matrix.artifact_name }} -C target/${{ matrix.target }}/fast rustorium

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: ./${{ matrix.artifact_name }}
          asset_name: ${{ matrix.artifact_name }}
          asset_content_type: application/gzip